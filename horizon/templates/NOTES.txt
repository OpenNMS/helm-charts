{{/*
Define namespace option for Helm commands
*/}}
{{- define "helm.namespace" -}}
{{- if ne .Release.Namespace "default" }}
{{- printf " -n %s" .Release.Namespace }}
{{- else }}
{{- printf "" }}
{{- end }}
{{- end }}

{{/*
Define namespace option for kubectl commands
*/}}
{{- define "kubectl.namespace" -}}
{{- if ne (include "namespace" .) "default" }}
{{- printf " -n %s" (include "namespace" .) }}
{{- else }}
{{- printf "" }}
{{- end }}
{{- end }}

Thank you for installing OpenNMS {{ .Values.core.image.tag | default .Chart.AppVersion }}.

Your release is named "{{ .Release.Name }}" and is installed into the
"{{ include "namespace" . }}" namespace. The release name is used as
the sub-domain for the ingress controller.
{{- if .Values.multiTenant }}

Multi-tenant mode is enabled, so the release name "{{ .Release.Name }}"
is also used for:
- Customer/Deployment identifier.
- Prefix for PostgreSQL database names.
- The OpenNMS instance ID for your Minions (prefix for Kafka topics).
- Prefix for Elasticsearch indices.
- Prefix for Kafka consumer groups.
{{- end }}

{{- if eq (include "onOpenShift" .) "true" }}

OpenNMS is running in Red Hat OpenShift environment.

Resources URLs:

* OpenNMS Core: https://onms-core.{{ include "core.domain" . }}/opennms/index.jsp


{{- if gt ((.Values.grafana).replicaCount|int) 0 }}
* Grafana: https://grafana-{{ include "core.domain" . }}/
{{- end }}

{{- else }}

Resources URLs:


* OpenNMS Core: https://onms-core.{{ include "core.domain" . }}/opennms/index.jsp

{{- if gt ((.Values.grafana).replicaCount|int) 0 }}
* Grafana: https://grafana.{{ include "core.domain" . }}/
{{- end }}


To learn more about the release, try:

$ helm status {{ .Release.Name }}{{ include "helm.namespace" . }}
$ helm get all {{ .Release.Name }}{{ include "helm.namespace" . }}
$ kubectl get all -l app.kubernetes.io/name={{ .Release.Name }},app.kubernetes.io/instance={{ .Release.Name }}{{ include "kubectl.namespace" . }}
{{- end }}

{{- if not .Values.core.configuration.alwaysRollDeployment }}

If OpenNMS needs to be restarted to apply configuration changes, you'll need to restart it, e.g.:

$ kubectl rollout restart{{ include "kubectl.namespace" . }} statefulset/onms-core
{{- end }}

{{- if .Values.core.inspector.enabled }}

The inspector pod is enabled and OpenNMS pod is not running.

This is how you can connect to the inspector pod:

$ kubectl exec -it{{ include "kubectl.namespace" . }} pods/inspector -- /bin/bash
{{- end }}
