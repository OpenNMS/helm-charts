{{- $image := printf "%s:%s" .Values.minion.image.repository (.Values.minion.image.tag | default .Chart.AppVersion) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minion
  labels:
    app: minion
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minion
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minion
    spec:
      {{- if and (eq (include "onOpenShift" .) "true") ((.Values.securitycontext).serviceaccount.enabled) }}
      serviceAccountName: {{ (.Values.securitycontext).serviceaccount.name | quote }} 
      {{- end }}
      securityContext:
      {{- if eq (include "onOpenShift" .) "true" }}
          {{- if (.Values.securitycontext).allowPrivilegeEscalation }}
          runAsUser: 10001
          runAsGroup: 10001
          fsGroup: 10001
          {{- end }}
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      {{- else }}
          fsGroup: 10001
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- range $k, $r := .Values.imagePullSecrets }}
        - name: {{ $r.name }}
        {{- end }}
      {{- end }}
      containers:
        - args:
            - -f
          env:
            {{- if eq (include "onOpenShift" .) "true" }}
            {{- if or (not (has "CAP_NET_RAW" (.Values.securitycontext).allowedCapabilities)) (not ((.Valuessecuritycontext).allowPrivilegeEscalation ))  }}
            - name: JAVA_HOME
              value: /usr/lib/jvm/java-nocap
            {{- end }}   
            {{- end }}
            - name: JAVA_MAX_MEM
              value: 2048M
            - name: JAVA_MIN_MEM
              value: 512M
            {{- if .Values.truststore.content }}
            - name: JAVA_OPTS
              value: -Djavax.net.ssl.trustStore=/etc/java/jks/truststore.jks -Djavax.net.ssl.trustStorePassword={{ .Values.truststore.password }}
            {{- end }}
            - name: TZ
              value: America/New_York
          image: {{ $image }}
          imagePullPolicy: {{ .Values.minion.image.pullPolicy }}
          {{- if .Values.minion.resources }}
          resources:
           {{- toYaml . | nindent 11 }}
          {{- end }}
          {{- if eq (include "onOpenShift" .) "true" }}
          securityContext:
           capabilities:
           {{- if and (has "CAP_NET_RAW" ((.Values.securitycontext).allowedCapabilities)) ((.Values.securitycontext).allowPrivilegeEscalation) }}
            add:
             - CAP_NET_RAW
           {{- else }}
            drop:
             - ALL
           {{- end }}
          {{- end }}
          livenessProbe:
            exec:
              command:
                - /health.sh
            failureThreshold: 3
            periodSeconds: 30
            timeoutSeconds: 20
          name: minion
          ports:
           {{- if .Values.minion.configuration.ports.karaf.enabled }}
            - containerPort: 8201
              name: karaf
           {{- end }}
           {{- if .Values.minion.configuration.ports.trapd.enabled }}
            - containerPort: 1162
              protocol: UDP
              name: trapd
           {{- end }}
           {{- if .Values.minion.configuration.ports.syslog.enabled }}
            - containerPort: 1514
              protocol: UDP
              name: syslog
           {{- end }}
          resources: {}
          volumeMounts:
            - mountPath: /opt/minion/minion-config.yaml
              name: minion-settings
              subPath: minion-config.yaml
            {{- if .Values.truststore.content }}
            - mountPath: /etc/java/jks
              name: jks
            {{- end }}
            - mountPath: /opt/minion/data
              name: minion-data-folder
      hostname: minion
      restartPolicy: Always
      volumes:
        - name: minion-data-folder
          persistentVolumeClaim:
            claimName: minion-data-folder
        - name: minion-settings
          configMap:
            name: minion-settings
        {{- if .Values.truststore.content }}
        - name: jks
          secret:
            defaultMode: 420
            secretName: minion-app-jks
        {{- end }}
status: {}
